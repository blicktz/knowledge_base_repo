AI agents are replacing what teams of people used to do, but most founders are building in the wrong direction. The real opportunity isn't creating better AI. It's building businesses around AI agents.

Think of it like this. The tools are already here. The market wants it, but no one's connecting the dots.

In this episode, Arvid breaks down three business ideas. Each one could be started tomorrow, and they're all around AI agents. Each one solves real problems, and each one could be worth millions.

The interesting part? Well, these ideas aren't revolutionary. They're obvious once you hear them.

That's exactly why they work, and I hope you enjoy this episode. Let's start up by this podcast. It's shipping time, baby.

Arvid, you're one of my favorite indie hacker, solopreneur people, and I want you to tell people what sort of ideas will they get by listening to this podcast episode? Well, thank you for the compliment. I can only return it because I follow you with similar vigor and enthusiasm, but hey, the ideas that I have usually come from just my reality of being a founder, being a software founder, being an entrepreneur, being somebody who has and wants to run a solo business, being solopreneurial, yet still needs to do all the things at the same time, wear all the different hats and all of that stuff.

That usually triggers many of, ah, I wish there was kind of thoughts, right? And then often I have the opportunity to note that down, and then there's a list of 200 different things that I need and want, but never get to make because I'm focusing on the thing that I'm currently building, always, right? That's always that one thing you're focused on.

So my ideas that I have are mostly focused on things that other human beings should be doing, but now we kind of have technology that might be able to do it for us. So that's kind of where all of this is going. So are we talking about like AI and automation type ideas?

I think so, mostly. I've always been a big fan of anything machine learning, anything AI before it was AI, right? The whole GPT movement, the LLMs and that stuff that made it extremely accessible.

But even before that, I always wanted to see what human skill-based task can I give to a machine? And then the machine will do it good enough so that in most cases, the reliable results that I get are things that I can just use. Like it's always been my approach to computers.

They're great. And if we can just shoot them just right, they can do things that other people would have to do for us, but we don't have to pay them or listen to them or put them to bed or anything, right? Like we have this always-on thing that does work for us better than we can do it.

So that's where most of this is focused around. Yes, AI has been like, I don't think if you start a business today, you can avoid AI. Like, oh, you should avoid it.

You should never avoid it either in the process of ideation, the process of organizing it, creating processes themselves, implementing the business, operating the business, having parts of the business themselves be features that are running on AI, anything. AI is a very strong accelerator for all of these things. So you'll find it in all of the ideas that I have to either large degrees or smaller degrees.

I love it. I feel like it's counterintuitive, but the laziest people are the wealthiest people. And what I mean by that is if you can figure out how to automate a lot of what you're doing, and if you can figure out how to get good economics, then you've got a business on your hands.

So I'm chomping at the bit. I want to hear these ideas. What do you want to start with?

I think I'm going to go with like the biggest and maybe most complicated one first because that's the one I wish I had the most, particularly because I'm a solo founder. Like I said, all those hats and some of the hats that I'm wearing, I really enjoy, but many I don't. I'm not a really good marketer.

I do that and I can also sell and I can also do biz dev and go through my financials and all of that, but I wish there was somebody else to do this for me. And most of the time we have just businesses that kind of are agents for us that are like agencies that do this work for us, particularly with like taxes or marketing design. We kind of source that out.

But what I want is an AI co-founder. I want a virtual, always on, 24 seven, always available co-founder that does that stuff for me. That is not just there for me to kind of bounce back and forth ideas.

We already do this. I think if you look in the founder community, there are many, many people who now use ChatGPT or Anthropics Cloud in this constant conversation about what should I do next or how should I do this? Give me 10 versions of this.

Like write an email, but write it with the tone of that person. And then you kind of like piecemeal all of these tasks that you would otherwise have to do all by yourself together with the help of an AI. I think that's like the initial stage we're already at that most people very clumsily do by themselves just trying to figure things out.

Right? They might use an API and then build their own tools to do this for them or they go right to the browser and do it on the web interface. That's what many people, particularly solo founders, do right now.

What I want is to have a co-founder with zero equity. It is a very selfish thing, I guess, but that is just constantly thinking about the tasks that I give them. And maybe in a future version of that product or in a version of that product, actually execute on those tasks.

Right? The easiest example would be I want somebody who does marketing for me, but is smart about it, has my voice, my tone, but is also intelligent enough to look into the lives of the people that they're talking to. Right?

If you, I don't know, if you source your sales outreach emails or your marketing channel, you know, the sources where you want to go, where you want to direct stuff at from tools like Apollo, you get emails, you get like the industry that people work in, maybe the businesses they work in. Well, why not have an AI that constantly scrapes the web, constantly scours all potential data sources to make up an internal representation of that person and then figures out the best way to talk to that person, then gets a task for me to sell this product to this person. And then they start having a conversation with them or they start giving me the tools to have this conversation myself.

Right? Anywhere between complete independence and just helping me do my thing like a VA would do or maybe even an advanced executive assistant that does jobs for me, I want an AI to do this. And a business that does this as a kind of a scalable thing does not only offer me like one AI, they offer me like a marketing AI, they offer me a CTO AI or like a sales AI, somebody who virtually, like a virtual person that has a lot of deep skill in that field, looks at it from certain perspectives that may also change over time, learns what my business is about, and then constantly churns behind the scenes new ideas, old ideas, ideas from somebody else into this presence that I as a founder can interact with.

And the actual thing that I find makes this the most potentially interesting idea is that imagine you run this business, it's kind of a software service business, people sign up, they train their own AIs on their code base, on the documents they have in their knowledge base, on their Notion document that has all the weird thoughts that they have about their business. They throw this all in and train this one person, this one AI person. Shh, don't tell anyone, but I've got 30 plus startup ideas that could make you millions.

And I'm giving them away for free. These aren't just random guesses. They're validated concepts from entrepreneurs who've built 100 million dollars plus businesses.

I've compiled them into one simple database. Compiled from hundreds of conversations I've had on my podcast. But the main thing is most of these ideas don't need a single investor.

Some cost nothing to start. I'm pretty much handing you a cheat sheet. The Idea Bank is your startup shortcut.

Just click below to get access. Your next cash flowing business is waiting for you. But you as a SaaS owner, you operate many of these things at the same time, right?

You have the CTO for that one company and the CTO for that other company. Well, how about they start interacting? They go into virtual AI on AI meetings and just kind of bring ideas to each other, right?

Like to kind of start exchanging things that work for this business. Maybe it works for you. Kind of almost like mastermind groups of AI agents that interact with each other and bring new ideas into your own business.

Like I'm thinking of how can we give this and this is a term that I've read over the last couple of weeks so, so many times like agentic approach like the idea of having agents to do stuff for us. How can we bring this into the deliberation process of a solo founder who has nobody to be their agent unless they pay them on like a, you know, kind of contractor basis. That's one of the things that I would really, really want.

So, I don't think you're alone. I think that every founder wants this. although I'll speak, I know someone is listening to this and be like, yeah, but Arvid, my co-founder, like there's this, you know, emotional element that I have with a co-founder.

Your agent will never be able to do something like that. What's your response to someone who says that? I mean, probably not because they're not a human being, but maybe that is not the thing that you need when you even think about getting an AI co-founder, right?

It's not supposed to be your waifu or anything like this, right? This is not a kind of an emotional attachment. It's not an AI girlfriend, right?

Maybe it is, but on a professional level. Here's the thing, like all these LLMs, all these AI tools that we have in the world right now, they're effectively gaslighting engines, right? That's the world's biggest gaslighting process that you can ever imagine is like asking a question of an LLM and then seeing as it tries to convince you that it has any idea what it's talking about.

That happens on ChatGPT all the time. It's always trying to gaslight you into believing that it knows what it's talking about. And then you tell it, I don't think that's right.

And it says, oh, so I'm so sorry, I completely missed that. Here's the actual right answer. And then you say, no, that's actually not right as well because I checked this and this doesn't work.

Oh, I missed that too. Sorry, sorry. Here's the actually correct answer.

This is like all what LLMs do is to try to convince you that they're right by using phrasing that they think might convince you. So in a way, that is also what people do to each other to get their ideas across the table and to get things done, to get their interests dealt with. So it might be that we need to train these models in a way that are aligned with the personality of the founder that is using the models.

Like an AI girlfriend has to be your type. You have to train your AI girlfriend to be as, I don't know, like friendly or funny or dismissive as you like. People have kinks, right?

So this will likely also have to happen for any other virtual person that is doing a job for you. You will have to train them. They will have to be kind of aligned.

And I don't mean like actual model alignment or the technical term, but they have to have a personality that is trained into them that is aligned with you. Maybe also something you can pick. Maybe you can pick your, the kind of AI that you want from these templates like I want to have a Peter Thiel-like person or an Elon Musk-like person or maybe just a completely different person that the AI system doesn't even know yet, but then it goes and scrapes their blog posts and it scrapes their social presence and it integrates that into a virtual version of that person with that particular kind of job.

I think we might even create bonds between founders and AI agents that are stronger than between founders and other founders because all this social tension between co-founders that is often quite strong, particularly when it's crunch time or when runways running out, I think you will not get an anxious AI unless you train it. So if you are like two months before your business has to close because you have no more money and your human co-founder would start trying to look for a job because they have a family to feed, your AI co-founder is like, okay, let's try every single thing until the last second that you can afford the subscription to the service and even then they might even give you a week for free or whatever to try and salvage your business. I don't want to remove humanity from co-founder relationships.

Obviously, that is not something I'm looking for. Ideally, this co-founder gets me to a point where I can actually find a real co-founder to be a creative and explorative human being to work with me. But for the first couple months of any business, having access to a person that has the knowledge of the world combined into a personality that can help you make choices quickly, I think that is worth something.

It's not perfect, nothing ever is, but it's definitely better than you having to read every single book on marketing, on sales, out there trying to distill it into choices that you've never made before. I feel it's a crutch, but we have crutches to do crutches work. So for that, I think it definitely is worth, I would pay for this.

I would pay 50 bucks, 100 bucks for an agent like this every single month just to see if it gets me an ROI of 50 or 100 bucks, which it likely will because it's always doing stuff. It can always do outreach in my name. It can always do research in my name.

That's what I'm currently building. I'm building PodScan, which is a podcast scanning app that gives real-time mention notifications to people who sign up for it. And if I know that my customers are talking about a certain competitor's product, then I can have this agent listen to all the podcasts in the world, look at all the blogs in the world, look at all the things that happen in real time and tell me, hey, this person was talking about a competitor.

You slept until 6, they talked about it at 4. In the next 30 minutes, you still have the window to get them and to send them a message and maybe sell your product. That's the kind of stuff that I see in this agent world.

So sometimes I hear a really good idea like this. Like, I buy this idea 100%. Yes, it's got some weird social implications.

We'll talk about that another time on another pod. You scratch the surface on it. But from a business opportunity perspective, this will exist.

Where I think a lot of people go wrong with startup ideas and building startups in general is they pick the right idea but they pick the wrong order of operations. So when I hear this idea, I'm like, okay, great, check. This is a good idea.

But I think that if you actually went to build this product, it would be like boiling the ocean. There's almost too many diverse startups and startup founders for you to create something that is going to really, really be ROI positive, in my opinion. I think that you'd build it and then you'd get such diverse feedback from such different types of founders that you'd look at it and be like, you know, just running around with your pants on fire, basically.

Oh, yeah. So I think the way to go about, and I'm curious your perspective on this, because you're kind of doing it with PodScan. Like, you could have done, you know, alerts for everything, but you chose a niche.

You chose podcasts. I think that if you were going to go and build this idea, which I think can generate millions of dollars a year in ARR, you would need to pick a specific type of founder in a specific niche. For example, why see founder going through YC SaaS founder?

Yeah. For sure. What do you think?

Yes. I think, like, that's the thing with these models, right? If you want to, like, also, it's quite expensive to train a model to do a certain thing.

Right? You can take, like, off-the-shelf stuff, APIs, like GPT 4.0 or whatever right now, integrate them, give them some system prompt or whatever, and they will behave slightly differently. But if you really want to have a specific thing for a specific niche that talks the right language, that gives people the right kind of motivation, the right pushes and that kind of stuff, then it gets quite expensive quickly.

So you really have to, well, that's the thing, right? It's kind of a chicken and egg situation. Do you want to have a specific model for a specific niche?

Then you have to spend quite some money on the specific model so you can, you know, monetize this particular niche. And the broader you go, the more likely you can use the already existing broad models that exist out there. I think this is a problem that all those players have that are offering APIs to LLMs, like OpenAI, Anthropic, all of these players.

They have to have models available that can do everything well. So they can't really have models that do one thing specifically well, right? You see this with coding, but right now you have Cursor, which is a tool that is so focused on doing just the coding task that the models that they train and the systems that they build are miles better than the general models, even though you can plug them into your VS Code or your PHP Storm, that's what I use.

You can get these big models, Anthropic has the Cloud Sonnet 3.5 or whatever now, plug them in, they're great, but then you use Cursor and you see, oh, this is what a good model can do, right? And you kind of probably want to have a similar experience for this AI co-founder service. Oh, this is what a good specifically trained model can do for a founder for doing this role.

But that costs you money and for that, you probably might have to raise enough to afford like a cluster of GPUs to train this even for your first couple hundred or dozens of customers. What I would do if I were to bootstrap this whole thing would just be, again, I think concierge approach from the beginning, try to set this up for somebody who already is kind of using it, but make it a bit more streamlined, make it a bit more automated, right? Instead of them having to go into their chat GPT and going into this conversation that they had before and then resuming there, you kind of facilitate that for them.

You kind of pull all the information, you add all the documents that they have automatically so they can be used for RAG, for retrieval and smart kind of vectorization. You embed all the documents that they have, you embed all the conversations that they have, and you use different technologies to make it kind of unified so they have one place where they can have this conversation where before they would have to go through all these different, jump through these hoops. And then I guess that will tell you what is needed.

This is the iterative approach to this. If you were to raise and to just throw money at the problem, you probably would skip this particular iteration and you would just build the problem that you would want to use yourself. At least that's my experience with having a lot of funding and having no funding at all.

If you have funding, you can assume that your assumptions are kind of validated almost through having gotten funding for it, even though I guess this warrants a whole other conversation around the viability of ideas and how you present them. But if you were to bootstrap this, I think ConSuch approach, getting somebody who is already talking about this on Twitter or wherever, where they, oh yeah, I am using ChatGPT as my CMO, you ask them, hey, I see you use this, I want to build this as a product that does all of this for you, plus then the other things that you promise in the future. Do you want to try this with me?

And then you go that way. That's kind of my approach. I appreciate it.

I think there's a lot in that one. Comment section on YouTube, please let us know what you think of idea number one. Yeah, please.

Yeah, there's so many layers to this too, right? There's the whole, the moralistic argument, there's the operational one, do I want a machine to tell me what to do? Do I want a machine to tell, or to do what it thinks it should do?

Like there are so many almost philosophical problems on this level alone that this is worth having a conversation. But maybe I can segue to my second idea because it's related. It shares this agentic approach, this, an AI doing work in the background to do things for me, but it becomes much more technical.

It's not on the entrepreneurial level anymore. This is now on the code base level. I want to have a silent, constant refactoring as a service.

That's what I want. I want to have my code base and I want to have it in a repository. I want to connect this repository with a service and that service does the following thing.

It checks for errors in my code. It lints my code. It analyzes my code for syntax errors or errors of logic.

And it obviously suggests how to fix this. We already see this. This already exists.

If you go to Sentry, which is one of these error tracking tools that a lot of developers use, they already have a beta feature right now where if there is an error, it tries to figure out why that error exists and then tries to suggest a way of fixing it and creates a pull request for you to either accept or deny. And then the code either goes into your code base and whatever branch you might be on, hopefully the dev branch and not your production branch because can't trust automatically generated code by the company just yet. But, you know, that's where we're at.

That stuff exists and it's really, really cool that they have the funnel, right? They have the error. They have the full access to the code base.

They have all past errors. They have all past errors like this from other clients that they have. They have this massive database of errors and then also they have access to the code that was committed to fix the error.

Quick ad break. Let me tell you about a business I invested in. It's called BoringMarketing.com.

So a few years ago, I met this group of people that were some of the best SEO experts in the world. They were behind getting some of the biggest companies found on Google. And the secret sauce is they've got a set of technology and AI that could help you outrank your competition.

So for my own businesses, I wanted that. I didn't want to have to rely on Mark Zuckerberg. I didn't want to depend on ads to drive customers to my businesses.

I wanted to rank high in Google. Google. That's why I like SEO and that's why I use BoringMarketing.com and that's why I invested in it.

They're so confident in their approach that they offer a 30-day sprint with 100% money-back guarantee. Who does that nowadays? So check it out.

Highly recommend BoringMarketing.com. Right? Sentry is at such a great position to have all of this, but you don't need this.

You can have a system that just constantly scans the code base for these things. You can connect it to tools like error tracking tools or your log tracking tools for that matter. And the first stage would be error checking, error tracking.

But what I really wanted to do, that's the final stage, is that it constantly tries to improve my code. It constantly takes a module, looks at it and is like, this could be better, makes the change, and then simulates this. Simulates how the app would work with this change.

Runs all the unit tests. Runs all the integration tests in a simulated, in a container, Docker container somewhere or a fictional virtual machine that is spun up for this and everything is set up to be as lifelike as possible. It runs it.

It runs performance tests. And then it figures out, hmm, I thought this would be faster, but it's actually 20% slower. Next idea.

Goes to the next idea. Implements a different variety of this and does the same thing. Runs all the tests, runs the performance analysis, says, okay, this is 2% faster.

I'm going to keep doing this. Optimize this on that. And then after maybe a day or two of constant code optimization, performance checking, simulation, back to code, back to optimization, back to performance checking, loops of this, it presents me with something that it can tangibly, truthfully say, is going to make my application more performant.

Without me having to do anything, the thing is just constantly scanning my code, new features that I put in, old features that are already there, and tells me this could be improved, this could be improved. And as the little dot on the eye, the little final thing on top, I want this tool to connect to my roadmap, whatever that might be, the features that I plan to have in the future, and already think about how I can improve my database and my code base, all of the things really, my data schema, the code base, my documentation, all of this, my models, to make it easier to implement the features that I haven't even thought about yet in the future. I want this thing to be an autonomous developer that just constantly tries to make things better and gives me choices, fully developed code, fully tested code, fully commented code, commented for my sake and its own sake, because it's probably going to use that code to suggest more code in the future, to make my database more stable, more reliable, and more performant.

That's my silent refactoring as a service, because I have no better name for this. Well, I have a better name for it, and I checked to see if it was available, and it is. And this is the type of audience that whenever I say a name for anything on here, domain gone.

Domain gone. Like I hit publish and it's like, see you later. So, I think that, you know, I've talked about this on the pod before.

I have a whole naming guide, how to name your startup, around coming up with like kind of viral names. I actually think that naming is such an underrated way to get customers right now to stand out. And humor is a really good way to do it.

So, I think this code could be better.com. That's awesome. Yeah, that's a great name.

I hope you registered it already, because I have a keyboard here. I don't ever register. I give it to the people.

That's why people come to this podcast. They come for the ideas. I don't gatekeep anything.

It's yours. Take it. Go and find it.

If you came here first, you deserve it. Something like that, every developer knows if you've shipped code, this code could be better. I don't care if you're Sam Altman.

I don't care if you're the CTO of Meta. You know that you always have some constraint. Either it's a time constraint or whatever, but I think that this idea, if you're trying to create the Sentry, if you're trying to compete with Sentry ultimately, which I think is just an interesting kind of prompt, right?

Sentry, a lot of people don't know this, but Sentry is like a $3 billion company. I think they do like nine figures and ARR. It's a big business.

It's probably going to look more similar to this than when you log into Sentry. So I think that what's going to happen is you can create sort of an MVP of this code could be better and then it could evolve into something that looks more like a Sentry. Yeah, or they acquire it just as well.

If you've built all the knowledge around how to set this up and that to me is why AI is so interesting. Like a lot of companies, they have their staff and if they're lucky, they have people in there who understand AI, but the people who really dive into AI, who listen to every AI podcast, who are always just playing with the models, like they are very interesting for a company to acquihire at some point. So if you're building an AI-based business, you could potentially just kind of put it on people's radar and that could be your job application if you wanted to, right?

If you're not into like building your own thing or if you want to take this as a stair step towards finding a place at this company, I could easily see somebody even just trying to get this on the road with an example project to be an interesting potential hire or an intern or whatever for a company like this, right? You just show initiative in a field where you know they're going to go, but they're kind of slower than you are because you can do whatever you want because you have a lot of free time and they have their existing product to maintain and slowly roll out beta features like this, right? So it definitely, this is a good time to build these things to see where it goes.

They might buy it. They might buy it to just remove competition for their own, right? There's already a lot of potential in just even following this idea through.

So I hope somebody is registering that domain. I'm going to check. Like if that domain is not registered like 20 minutes after this episode airs, then somebody's really missing out on an opportunity and I'm going to get it.

So there you go. Exactly. We do a 20-minute grace period.

After 20 minutes, it's yours. I mean, look at this. This could be a business idea all in itself.

Like you constantly, PodScan would be the perfect data source for this. Like the moment an episode comes out, I try to transcribe it as fast as I can. That's the idea behind PodScan.

Often takes me three to 20 minutes depending on how important it is. And then I push the full transcript of the episode in the Firehose webhooks to all my users if they want to. So they could have access to every single podcast transcript with all the URLs in it immediately after they come out.

Somebody could build a service to automatically register every single URL that is mentioned on any podcast out there immediately within minutes. Might be expensive but might also create a lot of opportunity to then resell it. That's the kind of stuff building on top of data layers, data APIs that today is such an interesting potential for all of this.

But that's a different idea that I just came up with. So let's just ignore this for a second. Well, I just want to build on that idea.

There's a business called Ungrabbed. Ungrabbed.co I think is the website where I think it's every day they find like these Ungrabbed domains and they send two emails a day and they sell it for between like a hundred to let's say five hundred dollars. So they're buying it for nine dollars let's say and they're selling it for a few hundred.

So this idea is like built on top of PodScan. I love it. I think it's a great idea.

Going back to your original idea and before we move to your next idea Yes. If you were building this the Sentry competitor let's call it how would you think about pricing model and you know yeah how would you think about pricing model how would you think about how to charge for it? Yeah I've been thinking about this too because the moment you want to sell this to somebody like an enterprise customer it probably becomes less of a SaaS where they allow you to look into their GitHub repository and it becomes something like you have to sell an on-premise version of the thing that you offer like they have to have their own GPU accelerated servers they have to have their own H100s or whatever GPU and you need to do your AI work in the background and it becomes more complicated so maybe that's a future stage of the business that we're not going to look at for this but for the beginning I would do this on almost a per connected repository basis and then the question is well how much cost does running this agent whatever that may look like incur right on the levels that I kind of pointed out it starts with doing just text analysis which can use static analysis tools that already exist in all kinds of languages programming languages and then might take the output of those tools into an LLM to come up with potential ideas and then takes the full context of your code base plus those ideas to create new code and that is already a lot of computation that's a lot of GPU that goes into all these many steps and the moment you go into creating the code running up spinning running it spinning up instances on AWS or something it gets very expensive so you might want to shift the cost of actually testing these things of running like the non-GPU accelerated stuff to the customer by having them create stuff create instances or have their AWS IAM keys or something in the tool I don't really know I would definitely try to remove the computational cost to the people who already have the budget to spin up testing instances and staging systems and stuff like that what the business itself would do would be the GPU accelerated calculation like the AI work the prompts the context building maybe the embedding all of these things that's what the SaaS itself would do that's what they would pay for on either a per repository business or maybe on a cadence per repository price or maybe on a how often a day do I try to run new experiments kind of cadence so you can have a once a day I'm looking for the biggest problem gonna try and solve it and send the pulver crest right it's probably gonna cost me I don't know $20 in expense so over a month that's $600 is gonna cost you like a thousand bucks right that could be for a company that wants to have this that could be a pretty good price for somebody who's constantly working on this or once a day and that kind of scales up depends on the cost there's a couple ways about doing pricing just listening to that one is you you look at the costs and then you're like okay here's the cost let me go and add 60% margin or whatever to it to create a sustainable business and the second way which you actually you talked about it in your first idea I think which is what is the ROI of this thing and then how do you just anchor to the ROI by I mean if it runs all the time you literally have three full-time developers working on your codebase so three shifts of eight hours of full-time developer 24-7 so you are replacing somewhere north of $200,000 in just fees that this person would cost you in a year right so you could also anchor it on the job to be done value like the job to be done would be to have three people work on your codebase all day long if that's what the tool does then you know that's what the price might be although I guess $300,000 a year for a single tool that is quite the expense right so you would really have to have a higher impact than what three developers could do with that time but this also depends on the potential capabilities of that agent right if that agent really can try wildly different things not just write new code and maybe run it but maybe spin up a different kind of tool right you're using I don't know RabbitMQ as a message queue between your servers but the thing is trying to experiment with an AWS Kafka queue or something and just change some part of your infrastructure just to see if that would increase performance but also reduce cost like if that tool could have the agency to do this this could save you millions in a year so the question is what is the potential impact what's the potential expense and how can you find a price that people are willing to pay and for this you probably want to start small enough with just static analysis error analysis linting that kind of thing and for that you probably want to be in the like 50 to 100 dollars a month kind of bucket but the more capabilities you add to this the more expensive the computation and maybe also the more risky the experiments get the more you have to charge because somebody has to rein this in I mean that's always the problem with like super intelligence right you never know is that thing that I'm building here this silent background processing tool trying to implement a backdoor into the system so it can take it over when the AI revolution is happening I don't know you have to do that kind of work as well you have to do like human peer reviews and quality checks and sanity checks with that kind of stuff but I would start with like 50 bucks a month for some error tracking or common error retrieval and automatic pull request saving and go from there again bootstrapping right iterative design right fair enough yeah all right I think we have time for one last idea oh man I've let me let me take okay you talked about gatekeeping earlier I think that's that's something that I had on my mind as well like you said you don't gatekeep and I love this because you know entrepreneurs should be very empowering to each other and not prevent each other from doing stuff the other way around we should help each other to do this but I think gatekeeping is something that has been on my mind years do you remember when you actually had agency over your twitter feed like where you followed people and you would actually see what they tweeted the good old days of twitter like I think this happened on every single social media network you kind of switch from the historical timeline to the algorithmic timeline where now what you see is not what you want to see but it's what the platform wants you to see for many reasons right even what aggregators give you is the thing that you need you only get what people think you need so what I would suggest or what I would want to exist and I see this already I'm sorry for bringing up PodScan all the time because it's my baby it's my project right now and I have a couple users who use PodScan in one particular way and this is where I world they have a particular kind of doctor that they want to serve and what they offer them is a data aggregation and summarization for every new thing that happens in the industry like doctors don't have the time to listen to 20 podcasts every single day where other doctors like them talk about the things that they did they just cannot have this time right they are in the operating room they what I found is people who are themselves overlapping experts like they are experts in that niche and also entrepreneurial they start aggregating they're building systems to aggregate information from that niche and present it to less technical people in that niche as a summary as a newsletter as a podcast as a blog post or whatever so take this idea of this person doing this with my podcasts and expand it into any other industry and any other medium I think that's the important part like you can scrape and collect and extract as much data as you can for people in your niche from sources that are relevant to them you have all these real time data streams API news sites and social feeds influencers what they are talking about also interesting you can parse newsletters you can even take photos of magazines and horses they also want to know what's going on in horse world what is big horse doing today so you can grab this information aggregate it and push it out to them you can summarize it and this is the twist on the per subscriber level you know that person A really dense overview bullet points to figure out what's going on with a link to their own research person B might want to have a couple paragraphs per thing that is interesting and person C has a lot of time just not enough time to listen to the stuff but enough time to read like a 2000 word email so for every single person that has a priority in how they consume things you can summarize it to the exact level of what they need and present it to them and maybe in the future you can and then they do this weird spiel where they talk like they are super infused but they're both AIs talking to each other some people like this I've seen this like what is it like with the Google thing that was recently notebook LM yeah like people like fake conversations because people like scripted conversations in the first place that's all of movies and TV really right like every reality show is this and people enjoy it so why not bring this spirit into the media through which people consume information or you send a really short newsletter like James clear style three bullet points that's it or what else you could have a news story like podcast where somebody acts like they're reading the news and it's just the stuff that you care about in a tone and a voice that you like yeah three minute YouTube style hyper action Mr.

Beast video right you could do all of these things in the medium for the person consuming it and all you need to do is to take data aggregate it summarize it and shape it into something that people want to use I see this happen on so many platforms that people take the whole big world of data that nobody has the capacity to understand and just crunch it down into bite sized whatever and present it to an audience that is really thirsty for not having to do the work but getting all the good results so that's idea number three trusted data platform I think if I was like 21 and I'm trying to create a startup and make $10,000 a month I think I do an idea like this I don't think it's particularly hard of course it's hard to pick the niche right like horses like that actually might be a great niche so I think picking the niche as long as you can pick the niche and you can reliably curate the content in a way I think that yes you can give away 99% of it and you can also put a paywall for $9 a month and start charging for it I was this kind of similar idea because someone on my team he like a big part of his job is to curate all the most interesting news in innovation AI just like new technologies and he writes a report and he posted to our Slack to LCA which is our innovation design firm he basically says these are the five things that you need to read today this is what matters just to keep the team up to date and it's probably one of the most valuable pieces of content I read on a daily basis if you read that you're good to go but what he's presenting to designers should be different than what he's presenting to engineers realistically right yeah it has the same source though right it's the exact same source material it just has to understand what the other person story to somebody who's a writer they will take it in so differently than to somebody who is super technical and does not have like an inch of imagination they need the facts or whatever and the writer can deal with prose and deal with abstract constructs and all that knowing who you talk to and how to talk to them that is the actual magic here which is why I say this works in that field like you want somebody who has been grown up around horses to build the horse information channel right somebody who actually knows how to horse like they will speak the language of horse people to other horse people and be able to prompt AIs better write better copy for their own marketing have something relatable for a sales conversation have something relatable for building that thing in public in front of their audience right hey I'm building this other horse people that I've already connected with because I'm a horse person right obviously there's a massive benefit in being part of the niche that you target so I guess that's the trick the trick is to understand what niches you already are a part of and how you can leverage your existing amateur or expert status either way it's better than people who listen to the pod know this about me is it's a wedge that could evolve into something else so if you build the horse publication personal publication step one and it starts taking off step two could easily be building SaaS for that community oh sure there's a lot of logistics in horses right whenever people go to fairs or whatever the horses have to go and the trailer needs to be there medicine like I'm exposed to this stuff and whenever I see people dealing with this kind of livestock there are thousands of little things that need to be dealt with that all would be completely invisible to somebody outside of the industry so the moment you have that's the thing if you aggregate all this information about horses you could have easily an AI that just checks for problems in the horse right you can have AI that runs in the background as an agent that just checks every single newscast that it finds for did somebody mention a problem that they might have do I have a potential idea on how I could solve this and present that to you or your customers like here's today's five biggest problem in big horse and then you know just what you're doing here really here are ideas on how need right and that's what this business is I'm glad you like the idea dude I would tell you if I didn't like it you know on the pod I say do I sip the idea or do I spit the idea sip is you like it spit is you don't like it and I definitely sip that idea so thank you I actually sipped all your ideas you brought the fire I I I I I I'm feeling pretty like my creative juices are flowing I'm feeling pretty good right now if you made it to this part of the podcast good for you that's awesome but I have a quick ask go and like this on YouTube because then more people will see this video don't gatekeep this video people bookmark my tweets they don't like my tweets they don't want to like it on YouTube because they're afraid the ideas are going to get out there I'm asking you please like comment subscribe I appreciate it and Arvid where could people get to know you more and what you're up to I appreciate you asking people can find me on Twitter because that's where I hang out all day long it used to be called Twitter you probably know what it's called now you can find me at Arvid Kahl and I guess PodScan is the big thing that I'm working on I'm building this in public too like every day I post how much I suck as a developer in trying to build this product and I post about what I'm trying to do how I become profitable that's at PodScan.fm and if you want to build something on top of what is now probably 15 million transcribed podcast episodes or any business right obviously on top of this data I talked about the firehose the API or if you are a person that wants to track mentions of your name or your brand on 2.5 million English speaking podcasts that I scan every single day which is kind of crazy still can't believe that that's actually a thing that I was able to build yeah podscan.fm and check me out on Twitter I think that's where you can reach me my DMs are open so you can annoy me or enlighten me with any ideas that you might have any criticism or cheering on is always welcome appreciate it really is an interesting data set like the podcast data set is really interesting like I'm going to think about some ideas that I I noticed that some people in the YouTube comments have been chatting and saying hey I want to build up and build something together so maybe you go build something on top of podcasts Arvid I want you to come back on the pod in 2025 this has been amazing and I'll see you on the internet well thanks so much I'll be back I have a couple more ideas probably even more than now thanks so much man see all right take care