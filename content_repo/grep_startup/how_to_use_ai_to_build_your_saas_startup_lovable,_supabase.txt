This was a really special episode. I had Rass Mike on and we teach you, he teaches you how to get the most out of AI to build your SaaS startup. And we actually go through a new tool called Lovable, which not many people have talked about, but we teach you how to use Lovable to go and create a SaaS startup in minutes, but also one that people will love.

You're going to enjoy this episode. It's an absolute treat. All right.

Special episode. Rass Mike is back. You asked.

He's back. And what are we talking about today, man? You know, I feel like family at this point.

So thank you for having me, Greg. But today I think we want to get a little bit in the weeds and talk about how to get the best out of these AI tools and models. Because every single day they're getting better.

But are you getting better on how to use them? And that's what we're going to be talking about. Yeah.

And I think people should stick to the end for this one, just because this is what people need in order to get the most out of these tools. So I'm sure a lot of people have watched some of our episodes even and have been struggling with some of these AI tools. But I think what you're going to teach them today is going to just sober them up a little bit and give them what they need to actually get the most out of it.

So without further ado, Mr. Rass Mike. Thank you, Mr.

Greg. I appreciate that. So one of the things that if you've never worked like a big corporate job on the tech side, one of the things you'll realize is how a lot of these companies work.

And maybe I'll draw, I'll scribble my thoughts. Oftentimes, like, let's say there's this big product that the team or the company wants to build. And usually the relationship looks like this.

On one side, you have product managers, right? The people that everyone wants to make fun of on Twitter. And then you have the developers, right?

And believe it or not, product managers don't just, you know, film TikTok videos doing day in the lives. They actually are an important part of the organization where they define certain things, right? So let's say a feature is going to be built.

If a feature is going to be built, believe it or not, in most organizations, the developers are not the creatives, right? We sort of get told what to build. Now we'll give input.

We'll give, you know, like feedback. But most of the time, it's the product manager that's going to give us the product spec, what it needs to look like, right? The product person will either work with, like, maybe a UX person.

So there'll be like a UX team here, right? There'll be a UX team here. And then maybe there's like some business people in suits who are overpaid here that are going to tell us what to do, right?

We'll just do business here. So, but the product person takes information from all these people, all the needed assets, all the needed information, combines it together and distills that information to the developer, right? So what does, you know, what's needed in the feature, right?

If some of you are product people watching, you're familiar with a PRD, which is a product roadmap or development roadmap or PDR, whatever the term is called. And basically, this information is then handed over to the developer. The developer will have questions.

But at the end of the day, if the information is good enough, the developer can successfully build this. And I experienced this on a day-to-day. I work with great product people.

And I realized, Greg, that a lot of people are led down by the AI tools hallucinating or giving them the wrong thing. And that's because most people are terrible product managers. If you frame yourself as, you know, when you're typing in the AI model that you are a product manager, you're, you're, I hope your mind shifts because giving it one prompt saying, oh, build this for me.

And then expecting it to build exactly what's in your mind is what we call daydreaming, right? So one of the things that I really want to communicate, and Greg, I would love your feedback, is collecting all the information that you need. What kind of flows do you need?

What features are you trying to build? What even is the core product you're trying to build, right? If you don't have these things figured out and you're just going to prompt your way to success, unless you have the highest subscription for any AI tool, you're just going to burn credits, right?

So I really encourage people going back to this part is knowing how to write, knowing how to define features with extreme precision and studying product. And I say this because I've worked with, I work with great product managers now, but I've worked with terrible ones. And there have been times where requirements have been given to us developers, and we've literally built the exact opposite of what they were thinking because they didn't communicate what they were thinking properly.

So don't assume the model knows. The models are dumb. They're trained on thousands of lines, millions of lines of code, so they can sort of predict what you're exactly asking them, but they don't know.

You are the one to know. And that's one of the, I think, best ways to get the best out of your AI tools. You need to be a product person now.

And Greg, I don't know if I just rambled for a few minutes, but hopefully that sort of made sense. Dude, can I just share my screen? I know this is off script.

Please. At my last company, I raised money by this guy named Josh Ellman. And people who in Silicon Valley know Josh Ellman, he was one of the first product managers of LinkedIn, Twitter, Facebook.

He's kind of like, ask Nikita Beer, who's the best product manager. He'll be like, Josh Ellman. And he has this really good presentation around what does a product manager do?

And I'm going to fly through this within 90 seconds just so people get a sense of what a product manager does. So this is old, right? What doesn't a product manager do?

Write code. Right? So that's going to change.

But a lot of the frameworks here still make sense. So what does a product manager do? Define the market and customer.

Launch timing, sales and marketing collateral. Define the problem and value proposition. Competitors, products and capabilities.

Define the requirements and roadmaps. That's what you were talking about. The PRD.

Product requirement document. Internal, external, stakeholder communication. This is more important for bigger companies, but still matters.

Product evangelist and champion. And then more simply, it's kind of the intersection of where UX, tech and business is. That's what a product manager is.

I'm going to keep going through this. So one of my favorite parts here is... Where is it?

Okay. Basically, you're the life of a glorified note taker. Some people think the job of a product manager is glorious.

In reality, the most important thing you do is document decisions. Follow up notes usually take longer than actual meetings. So I think that...

I'm just scrolling through this. People need to learn how to become a great product manager. And it's a lot of these frameworks around advocating for the user, how to communicate, how to take notes.

You're not... Don't think of yourself... I don't think of yourself as an engineer, as a builder.

I think of yourself as a product manager first, and then a builder second. Quick ad break. Let me tell you about a business I invested in.

It's called boringmarketing.com. So a few years ago, I met this group of people that were some of the best SEO experts in the world. They were behind getting some of the biggest companies found on Google.

And the secret sauce is they've got a set of technology and AI that could help you outrank your competition. So for my own businesses, I wanted that. I didn't want to have to rely on Mark Zuckerberg.

I didn't want to depend on ads to drive customers to my businesses. I wanted to rank high in Google. That's why I like SEO.

And that's why I use boringmarketing.com. And that's why I invested in it. They're so confident in their approach that they offer a 30-day sprint with 100% money-back guarantee.

Who does that nowadays? So check it out. Highly recommend boringmarketing.com.

So, yeah, I mean, that's perfect, right? I definitely do think great product people will be great users of the models. Just because, again, I've seen a lot of people like, right, oh, create a to-do list SaaS business for me.

Like, what does that mean, right? Like, how many pages do you need? Is there an accounts page?

Is there going to be authentication? So all these things are very, very much necessary. And thank you for, you know, confirming my thesis on this with that slideshow.

Now, the second thing I think that's going to help people with getting the best out of AI is just understanding the basics of the web. And I don't mean learning how to code and all that stuff, although, you know, I'm a big fan of coding. I love writing codes.

And I think if people gave it a shot, they would actually enjoy it. But that's not what I'm trying to share. Essentially, what I think is it's very important to understand, like, what technologies these tools use right off the bat.

Like, I can already tell you, Bolt, for example, Bolt.new, I know is a lot of people's favorite, uses React plus Vite off the bat, right? So whenever you start off a new Bolt app, it uses React for the front end. And Vite is like the compiler, the one that builds the app.

If you use V0, which recently launched deployments, which is pretty awesome, V0 uses Next.js under the hood, right? So, like, what's Next.js? What's React?

What are these tools? And a lot of people, you might hear a lot of people talk about Supabase as a database provider, right? What does Supabase even mean?

And I think having a basic understanding of these things can help. And that's what I'm here to break down. So in the web, there are three big, like, sections of the web, right?

Like, of a proper website, SaaS, whatever you want to call it. There's a client side, a server side, and a data storage side. Pretty simple stuff.

The client side is what you see. So when I go on my portfolio site, rasmagdoss at XYZ, what I see, this is the client. This is the front end, right?

So this is where the user interacts. This is your website. And then the server is where all the fancy math, APIs, business logic, and all that stuff happens.

And then your database is where all the data is stored, right? So if a user signs up, if, let's say, I have a Kanban board and I create my to-do list, that information needs to be stored and has to be associated with my username. So when I log out and then I log back in, that same data is there, it persists.

That's what a database is for. So this three-block system is what creates a functional SaaS. I bring that up because having this understanding will help you identify where things are going wrong when you're prompting your models.

And here's why. A lot of people are good at going to a model. Like, for example, I can go to V0 and say, create a landing page for a lawn mowing business.

If I spelled mowing wrong, I apologize to my English teacher. But so while V0 is prompting, what I wanted to show you is right now, what I prompted, essentially what V0 is going to do is going to work on the front end. Because I gave it no instructions on what to do on the back end.

I did not tell it we need authentication. I did not tell it we need payments. I did not tell it we need a database.

So most people start off with a prompt like this. And yes, it's writing some fancy looking code. But all I'm going to get is an AI generated landing page.

And that's because I just worked on the front end. So it's very important that I understand the difference between what a front end is, a back end is, and a database is. But here's the perfect, here's the crazy part of where we are in a society as a tech ecosystem.

You have companies that are called, and Greg, I'm sure you're familiar with this, companies that are called back end as a service. Meaning front end is generally considered to be easy, though it's not. But back end is the difficult part.

You need to worry about security. You need to worry about scale. I had a startup one time during 2023, a Web3 startup.

It grew so much that the back end, the application we built was not built for scale. So it literally broke. Like people cannot access it, right?

But we moved over to a back end as a service. And guess what? They started, they handled scale.

They handled all the users. They handled all the fluctuation. And a lot of people know these back end as a services.

You have a super base. You have a slept on one. And Greg, maybe bring them on the pod because they're a great team and their tool is amazing.

Convex. These tools, basically what they allow you to do is they build out your database. So if we go back to my drawing, they build out your server and they build out your database.

And all you kind of have to do is worry about your client and what your client calls on the server and the database. And I know it sounds like I'm saying a bunch of mumbo jumbo, but really what a successful AI tool builder is going to do is they're going to identify, okay, what am I going to do for my front end? So this landing page that I just built on V0 that unfortunately broke.

Let's click fix there. Uh-oh. So people are going to need to identify, okay, what does my front end look like being a product manager?

But then what back end as a service do I use? Do I use super base? Do I use Convex?

Or do I use whatever is out in the market, right? I think these two are the best ones and I enjoy both. And basically what this allows you to do is you now have the ability through these tools to build a full stack application.

Because an application is not just a landing page. You need authentication. You just need to be able to sign up.

You need a database. Data needs to be stored. You need payments.

People need to pay you. I hope you want to get paid. And having this frame of mind, understanding that there's a front end you have to worry about, there's a back end in a database you have to worry about, there's authentication that you have to worry about, is important to know.

But more than that, it's important to pick which tool you want to use for the job. And this is why I wanted to talk about, Greg, before I get into it, Lovable, which is a new tool, you know, a new AI developer tool, development tool. But what's cool about Lovable is they have Supabase integrated.

So it takes one prompt to get your back end set up. It takes one prompt to get your database set up. It takes one prompt to take your auth set up.

But I guess before we get into the building stuff, did that kind of make sense or did I just, yeah, technical jargon? No, it makes complete sense. Maybe this is too in the weeds, but when you're building something, how do you think about using Supabase versus Convex?

Like they're both such great platforms. So how do you know what to pick? Yeah, so it definitely is going to get in the weeds because generally they're both great at what they do.

Now, Convex wins when it comes to real-time stuff, right? So if you wanted to build a chat application or something where real-time, like you need some sort of real-time notification or you're building some sort of like collaborative tool and you need people to see what other people are doing, I think Convex wins. Not that Supabase can't do it, but Convex by default is real-time.

So anything you do with Convex, you get the data real-time, which is great. But there are people, and this might be too technical, who might need a Postgres database, right? That's the main database that Supabase offers, and they're the best at that.

No one does Postgres the way Supabase does in terms of DX, developer experience especially, right? So it really depends on the application the user's building. The best way I would say for someone who might not be as technical as your average developer is I would ask an AI model.

I'd go on chat, GPT, Claude and be like, this is what I'm trying to build, and I know there are these two backend as a services. Which one is better for my specific use case? There might be one where Convex is better, and there might be one where Supabase is better.

But generally speaking, both are great solutions. Beautiful. All right.

Let's go into, dare I say, the V0 killer, the bolt killer, the brand new, what everyone's talking about, lovable. Yeah. And I think we're going to get more of these because YC just keeps funding a lot of these tools.

So that really means one of these is going to explode. And I think if someone spends time on the core fundamentals, whatever AI tool ends up winning, you'll be a great builder with it, right? So let's, you know, let's start, let's build, I don't know.

I don't want to get too crazy, but let's build maybe any ideas, Greg? Something simple that's not too monstrous. Could, I mean, I don't know how monstrous this is, but what about like a note-taking tool?

Okay. I want... A note-taking tool for founders.

I want to build a note-taking SaaS for founders. Okay. Now, there should be a user authentication.

There should be a nice, clean landing page explaining why founders need my SaaS. And we'll... And I'll just end it here and we'll continue from here.

Main thing that I wanted to show is this Supabase button right here. And this is what makes it powerful. They have a direct integration with Supabase, meaning the AI models are well trained on setting up authentication with Supabase, setting up your database tables with Supabase, which is pretty difficult if the AI models are not very knowledgeable in said tool.

But the way the future is going, it seems to me that a lot of these tools are going to be integrating directly with a lot of these backend as a services, right? So a lot of the stuff that people are trying to learn right now, in my opinion, ends up being redundant in the next couple months, which is why everybody's asking for a course, but I'm not doing it because the tools are just going to get better. But one thing that you can teach yourself now that will matter in six months, a year, two years, three years, five years, whatever, is being a great product person.

Being someone who sees a great product and identifies why this is great, why the user experience is fantastic. Being able to write that down and communicate that to a model is where I think the real winners will be. Not trying to figure out how to integrate Supabase with said tool because the tools are going to do it anyway.

Yeah, and as an example, I could have said, let's build a note-taking app that's really cool and the UX is really cool. But I specifically said for founders because picking the niche, being an advocate for the user is such an important part of being a great product manager. Yep, yep, and I agree 100%.

And so we have your founder journey documented. Okay, I like that. So let's click on get started.

Okay, it says, let's, okay, I'll just create a random account. Registration not implemented. Please connect Supabase to enable authentication.

So I'm going to click here and I've already logged in my Supabase account. And what I'm going to do is I'm just going to quickly create a new project. We'll call this YouTube and YouTube Greg.

And I'm going to create a new project. So this is me using Supabase. And this is how I know they have a direct integration.

That click took me directly to my account. And once I go back, if I click here, I notice that it says inactive project. I have to wait, I believe, a couple seconds.

So we'll just let that set up. Shh, don't tell anyone. But I've got 30 plus startup ideas that could make you millions.

And I'm giving them away for free. These aren't just random guesses. They're validated concepts from entrepreneurs who've built $100 million plus businesses.

I've compiled them into one simple database. Compiled from hundreds of conversations I've had on my podcast. But the main thing is most of these ideas don't need a single investor.

Some cost nothing to start. I'm pretty much handing you a cheat sheet. The Idea Bank is your startup shortcut.

Just click below to get access. Your next cash flowing business is waiting for you. By the way, I was kind of laughing to myself when I saw it's just a button to integrate Supabase.

Because I had flashbacks to being in CS school in 2008. And this stuff was... We had to do the hard work back then.

Yeah. It's definitely easy mode. Honestly.

Even as a developer. A lot of developers are panicking that AI doesn't take my job. But even myself.

Honestly, Greg. With the Supabase or comics. I can literally build anything in warp speed.

Because a lot of the hard stuff they take care of. And sure they charge $20 a month. But if you know how to arbitrage that and make more.

Who cares if you pay $20 a month. Right? That's a cocktail in Toronto.

Yeah. Literally. Literally.

Literally. It's a McDonald's meal nowadays. Yeah.

Unfortunately. But yeah. I think there's a lot of...

I saw a lot of dudes doing full-blown tutorials. How to integrate Supabase and stuff manually. And it's difficult if you're not a developer.

And I knew. I was just like, somebody's going to figure out an integration. And when I saw these guys, that's why I was like, okay.

We have to talk about these guys. And so your prediction is basically, you know, Bolt or whoever is going to have these integrations in the next few months? Yeah.

So they're going to have templates and integrations. So integrations with like these backend as a services. And then an integration directly with Stripe.

Right? So setting up payments, few prompts. Setting up authentication, whatever.

Few prompts. I think the moat for the next couple of years, because... And I'm willing to argue this, is design.

Design and user experience becomes the moat. Because at the end of the day, like if you can make the experience much richer, much better, and you can actually solve the problem, you know, that's where you win. Because it's going to be super easy to build.

If I were like an advisor to Convix or Superbase, that's the top one thing I would work on. And if I was an advisor to these AI tools, that's the top one thing I'd work on. Because that's where people are struggling the most.

And then if you have like a template marketplace, like Framer and Webflow have, where like maybe devs put up some templates on like how to use the different tools together. It just, it, we truly enter like the, the, the birth of like non-technical multimillion dollar founders with no tech found, with no CTO or anything like that. Yeah, I think the way I see it is, I think design is, is a huge moat.

Distribution also huge moat. So the way I think about it is, if you think about like the physical world, real estate, you know, the saying location, location, location. Like, you know, if you're opening a store, selling, you know, coffee mugs, you want to, you want a place where there's a lot of traffic.

So have traffic go into your store, but then you're, so that's distribution. Then once you're in the store, the coffee mugs need to wow you off your feet, right? They need to get you to take out your credit card.

That's design, that's user experience. And then the actual like building of the store, well, that's essentially getting commoditized right now with a lot of these tools. Yeah.

And, and so I, I agree with you. And that's one of the reasons why, like I actually got a pretty like sick job offer as like a lead, front end lead. I didn't take it though.

And I felt crazy not taking it at first, but then I was thinking about like the YouTube channel and like, just like the brand I'm building. I like, if I were to make a year and a half bet, I'm willing to bet that this would be the bigger like play versus that. Cause we're entering an area where, like you said, like a time where like distribution matters, like the amount of like subpar companies versus like, and good companies that hit me up just for an ad.

It blows me away. Like, and I even told a friend, I was like, oh yeah, I'm charging this for a sponsor. And apparently I'm completely being undercharged.

I'm completely undercharged because I just don't know the game like that. Right. But I've come to realize, like you said, design and distribution becomes the biggest moat.

And I think that's where I'm trying to invest my time in because I kind of have the building part down. And let's see if this is done. Okay.

I think we should be good. All right. So now if I go over to demos, I see YT Greg is green.

So that means it's good. I'm going to click on it and I'm going to click connect. So it says I'm not connected to the Supabase project to gather your database structure, tables, security settings.

This may take a moment. And again, this one action is hundreds of prompts that people are using on all these different tools that haven't integrated with Supabase, which is why I think, you know, all the other tools have seen this. They're probably working on this right now.

I wouldn't be surprised if next week all of them shipped this. And this is why, again, going back to my main point, I know I keep repeating it. If you focus on the fundamentals, you'll end up being a better builder.

So it says, okay, and I can click on my project dashboard. My project is set up. I can read the docs if I want to.

It's still working. So look what it's saying here. It says Supabase connected.

Follow the instructions in the chat to complete integration. So what are the instructions? Enable sign up, log in with options like email, password, or social login.

So I have to click here, I believe. Oh, no, that's the URL. Let me go back.

Is it here? No, that's not it. Okay.

What do I have to do? Let's see. Let me refresh this.

You can now work fully feature. Okay. I'm going to ask, how do I enable this stuff right here?

Sign up, log in with options. Because it's asking I have to enable this. How do I enable sign up, log in with options like email, password, and social login?

Okay. Okay. So it's creating my database tables.

It's writing some role level security. It's writing policies. So like no one can just tamper with my tables.

Again, all of this stuff is not easy to do. It's not trivial. Especially in security, like that always keeps me up at night.

Like making sure that you're launching something and you, you know, you don't have to, you really don't have to worry that much about security is a huge, huge deal. And I definitely do think as like, like these tools start to get popular, that like there's going to definitely be some sort of like intervention, government intervention, like they kind of have in Europe where you're going to have to adhere to some sort of like security policy and stuff like that. So please do take security seriously, especially if you're handling user data.

Like, you know, I know you founders are about hustle and speed, but definitely take a little bit, review security, maybe hire someone a couple bucks to review the security of your application. It definitely goes a long way. That being said, let's try if this is set up, please connect.

Okay. I've already connected you. Let me see what's going on.

It's still working actually. Yeah, it's still working. So I guess we got to give it a second.

Sorry for all the dead time. It's okay. This is a live cooking sesh.

You know, we show, we show it all, you know, show it all in these sessions. Yeah. And I think also one thing that people should, should know is like, this stuff is like, without, even without like tools aside, this stuff is hard.

Like, you know, as a developer, you'll be stuck on like one bug, one feature for so long. Right. So, you know, there's definitely a part of me that says, you know, you got to have some grit.

You know, you have to like, you're not going to one prompt, get anything to work the way it should, at least. So, you know, definitely it's one of those things where you just got to push through and persevere. Okay.

I don't let me, I'm going to interfere. Let me just check this. Okay.

It won't let me write. I'm going to just refresh this. Let it break.

Okay. I believe what I have to do is I have to go to project dashboard. Last time I played with this, there was a URL.

So I think I have to go to authentication. Let me see providers. And then, okay.

Email is enabled. So that's all I need. I'm going to go back to here and say build out, sign up and log in.

With super base and make it work on my SAS. Why is it interesting? Is there any way I can kill what it's doing right now?

Because I think it's stuck. All right. So, you know what we're going to do, Greg?

I'm going to start a new one. Because this one is just stuck. Part of the game.

I'm going to start a new tab. It happens. It happens, folks.

Yep. It happens. We're going to start with, and I actually did this recently.

I was building, what was I building? I was building my own little meta React framework. And I broke it the first time.

And I tried to fix it. It wouldn't work. So I was like, I just need to clear mine.

I started fresh. So let's just, same prompt. Let's start again.

By the way, the landing page goes insanely hard. Yeah. No, they, you know who I can tell you firsthand, they trained off the Tailwind site.

If I go to Shonis, and like, whereas, like, because I remember, like, I know, you know what I mean? Like, like, if I go here, you see that? Totally.

You see that? Did you know this? So, yeah, I saw that.

I was like, I know that design. Right. I know that design.

Yeah. So, okay. So it's building out these, seems to be building on my signup page, building on my login page.

And this is our landing page. Okay. Spinning up preview.

Okay. Not as cool as the first one, but we'll take it. If I click on start on free trial.

Okay. I'll just enter my name, my email, and then the password. If I create, it didn't work.

That's because we did not integrate with Supabase. So I'm going to click connect here. So it says, I'm now connecting to your Supabase project.

Gather your database structure, table security settings. This may take a moment. So we'll give that its moment.

Do you think you'll be using Lovable in 12 months from now? You know, I like these tools to quickly MVP myself. So like, let's say like a client hits me up and I have, they want me to build something.

I will kind of, instead of me sitting down and thinking about it, I'll kind of just try to build it like a smaller version with like a bolt or whatever. And then it kind of gives me an idea of like what I have to do. And I kind of take that and then start to refine what I have to do.

So I don't, until these integrations get solidified, I haven't gone like end to end, but it's definitely my tester and something that I use to build, um, MVPs with. So it says you can now work with fully featured backend and add powerful features to make your app functional user accounts, login, all the good stuff. So now I'm going to say, now make the sign up and sign in work using Superbase.

I'm going to hit enter. And now we should see it create my tables and do what it needs to do to make this work. It says please review and approve SQL commands.

Now the reason why it's asking me to review this because SQL is no joke. Um, you can really destroy business writing the wrong commands, which is why, like, you know, you can copy this, maybe take this over to another model and ask it like, what are these commands going to do? Can you review them?

Um, but they look good to me. So I'm just going to click apply. Okay.

So now it says the migration is being applied, meaning the tables are created. Now it's going to implement the authentication UI and functionality in the front end. I'll update login and sign up components to use Superbase authentication.

So it's working on that. I think we can even click on this and look at the code it writes. And yeah, it looks pretty good to me.

So we'll let that do its thing. Clean code commented. Yeah.

Yeah. That's, that's honestly, if you ask me what's my biggest usage of, Hey, I is comments. Yeah.

Cause comments really help. So since I've implemented the authentication functionality for both login and signup pages for development purposes, you should disable email verification in the Superbase console to speed up the testing process. So if I click here, I can disable this if I want to, but I won't.

We're actually going to leave that there and we're going to go back here and I'm going to try to sign up and honestly, if signup works, then you can pretty much do anything. Cause that's the hardest part. Let's create an account.

Success. Please check your email to verify. Now I'm going to check my email.

If I got this, let me check. While you're checking that, did I see like you can sign up with discord and figma? Like some pretty obscure ones.

Yeah. So there's Apple, there's discord, there's Facebook, well Facebook, figma. Yeah.

I don't even know what some of these apps are. Notion, Twitch, Slack, Spotify. But like, that's really cool, right?

Like how many people are doing login with figma for founder note-taking apps? Like probably not that many. Yeah.

Yeah. And, and, and, and the thing is, it's very like, they're not easy. Like, like GitHub's integration is pretty simple, but the others are not easy.

Right? So the fact that they've abstracted that and just made it an enabled disabled situation is fantastic. That being said, ladies and gents, I just want to show my email.

Look what I got. Follow this link to confirm your user. So like the email check even worked, which is great.

So what I'm going to do is I'm going to confirm my account. And now what I'm going to do is I'm in the sign in page. I'm going to click sign in and I'm signed in.

So the authentication actually worked. So what I'm going to do now is I'm going to say, create the note-taking page. And make it so that only authenticated users can access it.

So my authentication works, which is fantastic. And again, you have all these providers like, you know, phone. There's, there's a lot that you can do here.

And if I click on my users here, look at what users signed up. That's my email right there. That's my name right there.

I signed up through email. What time? Last sign it.

So this tool allows you to build a full, a full sign in, sign up database integration with Supabase, few prompts. Now I told it to make the note-taking page and it's creating the tables for the notes because I'm signed in, but I'm going to write notes. And if I'm going to write notes, those notes need to be attached to my username and need to be persisted.

Imagine you write your notes and then the second you log out, all the notes disappear. That's a terrible application, right? So it's writing, it's building out all the tables.

I'm going to accept the SQL queries that it wrote. And we're going to wait for it to apply. As terrible as the first go was, this honestly would have been, I don't know, like 60 prompts with any of the other tools.

Yeah, it's funny because like after using so many tools now, I'm like starting to get numb with how amazing this is. Yeah, no, it's honestly like it's insane. Like, you know, there are boot camps that charge like upwards of $20,000 to teach people this.

And you and I are doing it through a few prompts and clicks. All right, so it says the migration's applied. It's created a new route.

So let's try this. I'm going to click start free trial. Okay, it takes me nowhere.

So I'm going to say add a navigation bar. And when I click, I'm going to say add a navigation bar. And then I'm going to make this like a list.

And when I click on start free trial, nothing happens. If I am signed in, it should take me to the note taking page. If not, it should take me to sign in.

Again, this is all just being about a great product person. So I noticed that I don't have a navigation bar. I should probably have a navigation bar.

And I noticed that when I click on start trial, nothing really happens. And I want it so that when I click this, it takes me to the note taking page if I'm signed in. But if I'm not signed in, I need the user's information.

So I need them to sign me in. Do you even consider yourself an engineer anymore? Or are you a product manager?

You know, so there's a part of me that although these tools are good, if we went, if someone who's great at using these tools went against myself, or even like there's thousands of engineers better than me, I definitely do think the engineer still has the edge in terms of making the more performant and faster application, right? Because just looking at how it's written the code, I'm not saying it's wrong, but I can definitely make it much faster already. So I still think in cases like that where speed and optimization is important, I will still, I still consider myself an engineer.

But five years from now, I can't even tell you where this thing is going to go because it honestly is scary. But so, yeah, I have my nav bar. If I click on profile, profile page is empty because we haven't done anything.

If I click on notes, it takes me to a notes tab. But if I click on start trial, remember what I told it to take me to the notes tab? That's what it does.

And then it says log out here. So I just logged out. Perfect.

Let's say I want to actually open this on the full screen so I can see the URL paths. So let me, why is the, I don't see the, let's go back here. What I'm going to do is add the navigation bar in the sign in and sign in and sign up page as well.

Let's do that so I can navigate back home from the sign in page. Because currently there's, there's nothing I can click on. I mean, I can do that, but that's kind of a cheat.

Let's go back to log in. Have you thought of like investing in any of these? Yeah.

Yeah. I, uh, yeah. TBD.

You should. Yeah. Good.

So yeah, look at that. I could go home. I click log in.

And if I click start free trial, it's going to tell me create an account. I already have an account. So I'm going to log in, click sign in.

And then that nav bar pops up. So what I'm going to do is when I sign in, take route me to the notes, note taking page. Again, this is a big deal because not only do we have like our landing page, our nav bar and all that stuff, but we actually have authentication.

And it's, it's done. Like we don't have to work on authentication anymore. Right.

Right now I'm working on the flows, right? Someone signs in. It should directly take them to the note taking page.

So it says it's done that. I'm going to click start free trial. Look at that.

And then if I log out and I sign back in, takes you to my note page. Now let's say I write Michael and Greg. And I'm going to say they are best friends.

Which we are. Which 100%. And I click on create note.

So it says Michael and Greg, they're friends. So that note is created. Now here is what's cool about this.

If I go back to my super base and I click on table editor, I'm going to see notes and profiles. If I click on profiles, this is my profile. I have a user ID here, my name, and then what time I created my account.

If I click on notes, I'm going to see my note stored in the database. But here's the thing. It's connected to my user ID.

Right. So you see user ID here, 7BB. If I go here, the ID is 7BB.

So this note is attached to my user ID. Meaning if I log out and I sign back in, my note is there. Ladies and gentlemen, you have a SaaS.

Now payments are difficult and I hope they have a Stripe payment integration. But you finally have the ability to create this full. Remember this full flow I showed you?

Your client, your server, and your database. The hardest part was this right here. Right.

Especially with authentication and database. They've made it super easy. The final beast to conquer is payments.

And what's cool is they also have deployments. So I can deploy this publicly. Right.

I'm going to click on deploy. And we're going to give that a few seconds. While that's deploying, one of the things you said was authentication is now done.

What people miss about authentication is, let's say you authenticate with Figma. And Figma changes their API for whatever reason. You have to maintain it.

Now you don't have to do the maintenance, which is a really big deal. That's all on Supabase, right? And that's what you use it for.

So it says my site is published. If I click on this, I have my note-taking app. If I click on start free trial, it's going to tell me to create an account.

I already have an account. So I'm going to sign in. We click on sign in.

My note is there. This is cool. And this is why you should subscribe and like Greg's channel.

And I'm going to say, hi, this is Mike. And if I click on create note, the note is created. We have our SaaS.

I hope you are entertained. Hell yeah, dude. That was great.

I appreciate that. That was super helpful. A couple action items.

So one is, if you enjoy this and you want to learn something else, another type of tutorial, just comment on YouTube what we should talk about. So we're always looking for ideas. And then Michael often is in the comment section too.

So he can respond to you as well. And number two, Ross Mike has a great YouTube channel. It's at Ross Mike.

I'll include it in the description. Highly recommend you guys go and subscribe where he does more videos like this. Yep.

And if you ask for it, you shall receive. So definitely, you know, especially in the comments, if you have any questions. I said I would respond to every comment last time.

I couldn't because there was just too many. But I will try my best, especially if you comment thirdly. Beautiful.

All right, my man. I appreciate you. And all right.

Let's go become product managers. Yep. That's the game.

Thank you so much, Greg. As always, I appreciate you. And thank you, everybody, for showing love.

All right. See you later. It's Sipping Time, baby.

It's Greg Eisenberg. It's Sipping Time, baby.