How many of you guys in this room have actually heard of Teespring before? That's a good number. All right, there we go.

That's way, way higher than usual. I'd love to see that progress. For those of you who don't know who we are, Teespring is an entrepreneurial platform.

We allow people to bring products and launch brands in the market without cost, risk, or compromise. In 2014, as Sam mentioned, we shipped over 7 million products. One in 50 Americans bought a Teespring product.

More exciting for us, 20 people became millionaires on the service. Hundreds made six figures, and thousands now make a living. What we're aiming to do is change the way that people think about what it takes to go from idea to product in the market, by essentially removing things like manufacturing, logistics, customer service, everything that we kind of consider that we can abstract.

When I think back to three years ago, when this was really just an idea two crazy college students in Providence, Rhode Island had that everybody we asked thought was stupid. I think how we got that initial traction and momentum and what were the biggest contributing factors to it, it really comes down to the fact that we did whatever it took. Put more eloquently, we did things that did not scale.

We didn't plan for the millionth user on day one. All we focused on was the next order of magnitude. And so, you know, as a startup, you have a lot of disadvantages versus larger companies and competitors.

You don't have as many people, you don't have nearly as much money, you don't really know what your product is even going to be in 12 months, it's not as feature rich, there's all these disadvantages, but there's one significant advantage, enormous advantage that people massively discount, and that is that you can do things that don't scale. And I define doing things that don't scale as growth strategies that are fundamentally unsustainable, that will break at a certain point. And normally, they break around founders not having enough time in the day, sometimes they break around profitability, you know, it costs a certain amount of money, and the more you scale, the more that money costs, the more it costs, the more you lose.

But fundamentally, they just will not take you to the millionth user. And I'm here to argue that this is the largest advantage that you have as a new company. And the more that your company grows, and you start to see these competitors come out and move really fast, be more agile than you're able to be, the more you'll realize how valuable this was in the early days.

So there's three places that I recommend that you maximize this advantage. That's recruiting early users. And when I say early users, it doesn't have to be the first 10 users.

We use the same strategies to recruit users up until we were doing millions of dollars a month in sales. And then finally, finding product and market fit. So how you can use this agility and being able to do things that don't scale in the early days to figure out what your product even should look like and should be.

So recruiting early users. I always have to start out by saying that there are no silver bullets in user acquisition. Or in the vast, vast majority of cases, there are not.

And what I mean by that is that it's human nature that when you launch, you want to look for that easy path to success. And from the outside looking in at a lot of companies, and I hear this when people look at Teespring, and it looks like an up into the right curve. It seems like it was so simple that something just went and a fire start and it went.

So you look for a similar strategy as a business. You look for an SEM strategy, you're going to pay five bucks, you're going to make $10, it's going to grow, you're going to be a huge business overnight. And so you look for having a sort of viral loop and every user brings in two users, it's just going to explode.

But for the vast, vast majority of us, and for every great company that I had the chance to speak to the founder of, the reality is that getting the first users will take a significant amount of time and effort. And that's from early employees and founders. And that can mean a lot of different things.

For us, it was, you know, I prefer to be in the realm of design, user experience. And so this act of sort of hustling was sort of foreign to me. And it was a transition for me to realize that the most successful thing that I could do to grow our business was not to focus down on incrementally improving the product, but rather get on the phone and every single day, I would try to make as many calls as possible within a four hour span before I ever got into Photoshop or anything or started coding or anything else that I could look at.

But spending that time is just absolutely fundamental. And it comes down to the fact of you don't want to focus on ROI for your first users. You want to focus on growth by any means possible.

And I visualize this by, if you think of like a perfect hill, and you're trying to push a boulder up that hill, the first couple steps, the incline is the steepest, it's the hardest, you're pushing as hard as you can, it takes time. And then over time, you get things smooth out a little bit, and you keep pushing, you keep pushing, and eventually you reach the peak, and the boulder starts rolling on its own. But it is going to be hard work to get that movement started and to reach that peak.

So in the early days of Teespring, I think any investor, anyone looking in would have thought it was a miserable business. We launched and the first clients we went after were local nonprofits. And it was taking weeks of meetings, you know, iteration after iteration of designs, we were driving back and forth dropping off samples, when orders did come in, we would have to actually go and call the printer and manually organize all the details.

It was hundreds of man hours for every hundred t-shirts sold. So we would make $1,000 for probably a hundred hours of work, which, again, seemed entirely unsustainable, and we heard it a lot from investors early. But for us, the most important thing was giving our users a fantastic experience, and making sure that every single person that touched our service walked away happy, so that if they heard the name Teespring, they would be an advocate.

And one of the great things about this is it's sort of a necessity to grow that you give this white glove service. So Paul Graham, who was the founder of Y Combinator, but also had a company called ViaWeb, which eventually became Yahoo Stores. In the early days, very similar to Teespring, they built this sort of do-it-yourself store builder technology, launched it only to realize that nobody was going to give them the time of day to actually use the product.

So it ended up that their team, they would have to go out and sort of consulting-esque, go to these people and say, hey, we'll just build it for you. We'll use our own technology. Just tell us what you want, and we'll do it all for you.

And giving that white glove service, it's almost demeaning to an extent, because it puts your heart and soul into this product, and yet here are people saying, ah, it's just not worth my time. Can you just do it for me? But at the end of the day, that white glove service breeds champions.

And champions are, for me, sort of the lifeblood of a great company. A great example of going the extra mile to recruit those early users is Reddit. So in the early days, Alexis and Steve, when they wanted to have these meaningful discussions, and yet there just were no users on the site.

So when new users came in, who were they going to talk to? And so they actually went out and created dozens of fake user accounts and fake personalities, and had debates between themselves on every single link, which seems crazy, but now they're spending all this time actually using their own service. But now a new user comes in, and here's the thoughtful debate that they were looking for, and it bred these users that were champions, and up to a certain scale, where eventually they didn't have to be there anymore.

The users were engaging with what they had ceded. AstroTurfing, there you go. So the next big thing is turning users into champions.

And what I mean by a champion is a user who not only uses the product or is a customer, but is also advocating for and talking about your product to other users, or other potential users, I should say. And this is a fundamental part of building great companies. I have something I tell people who are just getting started, which is you want to build a painkiller, not a vitamin.

You want a product that doesn't... A vitamin incrementally improves your day, it's certainly valuable, but if you go a week without your vitamin, you're not really going to notice a significant drop-off in quality of life. Now, if you need painkillers, and you miss a painkiller for a day, your whole quality of life shifts.

So you want to build a product that people fall in love with, and one way... And need. And one way to build that sort of product is to engage the early users in the most white-glove service, where the founder is reaching out, asking them how it's going, getting their feedback, hearing their suggestions.

Go to where your competitors cannot with that personal level of service. And at the end of the day, it's about delighting users with experiences they'll remember. Memorable experiences.

And the easiest way to do that is to simply talk to your users. And I know this is something that you hear all the time. It's sort of a maxim of startups.

It's a tenant of Y Combinator. Everybody says, talk to users, talk to users. And yet, when I go in and I look at early companies, oftentimes, while they know they should be talking to users, there's a difference in theory and reality.

And it's usually because in the early days of a company, things are not perfect, right? Fundamentally, if you're moving as fast as you should be, your product is going to be a little bit broken, a little bit wonky. There's going to be things missing.

And sometimes talking to users is painful because they tell you what you're missing and they say, ah, you know, I'm going to, I got to leave because you don't have these things or it keeps breaking or whatever it might be. But talking to users is the best way to build a meaningful feedback loop and understand where the pain points are. You need to get good at filtering out sort of noise versus signal.

But this is still today, every single night when I get home, I spend three to four hours looking through every Facebook community that talks about Teespring. There's all these amazing entrepreneurial communities of people discussing strategy. I read every single tweet about Teespring, good and bad, and there are absolutely bad, and try to make it right.

I give every single user my email address so that when they have a problem or they hear a buyer writes them an email and says, hey, I got a shirt, there was a splotch on it, or the design was slightly off-center, whatever it might be, they can email me directly so I can deal with it. And getting that feedback loop is fundamental. So three ways you should be focusing on talking to your users.

One, handle your own customer service. This is kind of a unique one for me because there's nothing else, there's no other service I use in my entire life where even today, so I do customer service tickets but I don't handle it exclusively now. Every single time I open up our customer service portal, I get a visceral sinking feeling in my stomach from those early days where I would open it up and I was so committed to trying to build something that people loved and so focused on putting everything I had into this product, and yet you'd open it up and you'd hear about these experiences that are totally contrary to what you're aiming for.

Somebody bought products that were supposed to get there for a birthday and they were late. Somebody got a bad print, something they didn't like, it never showed up. But we handled, Evan, my co-founder and I, handled customer service all the way until the point where we were doing $200,000, $300,000 a month in sales.

And I think that those early experiences helped guide us to the company we are today. We look nothing like the company that launched and it was listening to users and understanding where we missed and also making sure that we experienced the pain of the negative side of the business, of the mistakes we were making, so that we were even more committed to making them right. The second is to proactively reach out to current insured customers, and I call this one out because it's a mistake that we made.

In the pursuit of growth, you know, there's so much, like 30%, 40% month-over-month growth is an insane target. It's ridiculous for a business to have that sort of growth. And in pursuit of that, oftentimes you start to forget about your current customers.

You're so eager to bring the next person in that you forget to look back and say, hey, how are you doing now that you've been with us for three months or six months? And the same thing for churned customers. It was years before we started realizing and tracking and reaching out to people who tapered off or stopped using our service.

And yet, a simple conversation, just reaching out and say, how are things going? Or reaching out to a customer who stopped using the service and saying, hey, I saw you canceled. I saw you left.

Did something go wrong? Is there something that we could talk through? I love the feedback.

That can be the difference between a user walking away and building a user who knows that it's going to get better, who's going to work with you, who's going to give you feedback towards improving, who becomes emotionally invested. It's time out of your day. And there's a million things that you need to be spending time on.

But it's that small touch that can build champions. So, listening in via social media and communities, this depends on what kind of company you are. But I would define that more as trying to listen in to third-party streams of communication.

So, anything where people don't really know that you're listening. Because then you can see this kind of unfiltered stream of feedback in any way you can. And so, again, that goes back.

I'm OCD about reading every comment, every post, every tweet about Teespring. And even the bad ones. And then, you know, there's emails that go to team at teespring.com.

Angry emails. So, a really good example of a company that went the extra mile to build champions is Airbnb. So, in the early days of Airbnb, this behemoth, this amazing company, they were struggling.

It was a ridiculous figure. They were struggling to get any traction and get off the ground. And so, what they did is first they went to New York City where their users were.

And they did two things. One, they started hosting meetups with this very small community. Buying people drinks, going to bars, learning what people were actually thinking, saying, and wanted from the experience.

And then when they heard from customers who were renting Airbnbs, that the quality of the photos and the listings weren't exactly giving them confidence that they could sort of, that this was something they wanted to do. They went out and hired professional photographers and professional writers to go out there and actually make each of the listings beautiful. So that it did inspire that early confidence and got those early users.

Now, is it sustainable to have, to fly a professional photographer out to each apartment listing and have them sort of professionally shoot it, as well as do having a writer review the listing? Absolutely not. But it got them those first few feet up that hill and then the boulder kept rolling.

And the problems are inevitable in a startup just by nature of the fact that you're building a new company. Problems happen every single day at Teespring. There are things breaking.

There are customers that have bad experiences. It's not so much whether you do have problems. It's what you do when they come and how you react.

In the early days of Teespring, we made a conscious decision that we were going to do everything we possibly could to not let people walk away with a bad experience. And there were points where, you know, again, in the very early days that money is not unlimited, you are absolutely, you can't really afford to do it. We had users where we'd ship something out and the color would be a little bit off or the size would be a little bit wrong or there would be just something slightly wrong and your inclination is to say, well, it's, you know, it's almost there.

Like, it should be fine. Sometimes this was like half a month of GMV and we just could not afford to lose it. But we had made that decision and in all of those early cases, we would go and we would either completely replace or completely refund every single order on the purchase.

And a side effect of this is we made it so painful to make mistakes that when a mistake did happen, the whole company sort of rallied together and made sure we put practices into place that it wouldn't happen again. So the last thing I want to talk about is finding product and market fit. And I know HustleCon is more focused on folks that are non-technical, but this absolutely applies to you as well.

So the product you launch with will almost certainly not be the product that finds market fit. And what I mean by that is you need to wiggle your way into finding what your company will look like, what your customer base is going to be, what features you're going to need, whether you need something that's robust and handles power users or really simple to handle a great funnel and have novices have a great experience. You're not going to launch with a perfect picture of what the company will become.

And so in knowing and accepting that, your job is to make sure that you stay as agile as possible so that you can find what will be your company as you grow. And it comes down to the fact that you need to iterate as quickly as possible to find fit. And so as an example, in the early days of Teespring, we were going after these small nonprofits.

And then there were these kind of big behemoths of companies and nonprofits that came in and said, hey, you've got something interesting here. We'd like to use it. But, you know, we have teams and branding requirements and all of these things that need to be better handled for us to do this.

And I sat down with Evan and we looked at it and we said, well, we can do this, but if we build this the right way, it's going to take a month. And a month doesn't seem like a lot of time, but in startups, you're sort of living in dog years. A month is a ridiculous amount of time for anything.

And so instead of actually building the future out the right way, what we did is duplicated the code base, duplicated the database, hacked the ugliest code you'll ever see just to make it work, put it out to those enterprise users. And we did it in four days. And within a month, we found that those weren't going to be the right customer for us at that time.

And we were able just to completely sunset the product. And we didn't have to worry about it. It didn't impact the core product.

We didn't burn a month. And we figured out very quickly the profile of who our users would be. So optimize for speed over building scalable technology.

Again, this is your baby. You're putting your heart and soul into this product. You want to build it the right way.

You want to build it the way you picture it in your head. But the reality is it's far more important to get something out there, listen to the users, and use growth as a compass. When you feel users pulling you in a direction, you can move towards it.

It's called hill climbing. And it really is, I would say, one of the reasons we're here. Our user base today, which are entrepreneurs who come up with ideas and brands, influencers like YouTubers who use Teespring to monetize, people that use Facebook advertising, Twitter advertising, Pinterest ads now.

We had no concept that those would be successful users. We thought it was college kids and nonprofits. And had we launched with a product that was fully optimized for those verticals, I wouldn't be standing here today.

And I don't think this company would exist. And so for us, take that lesson of MVP to the extreme. And anytime you want to try something or you want to build something, always think about the fact of how do I get this done as quickly as humanly possible so that I can find out if it's right for us or if it's not right, pivot it again.

A great example is Stripe. A great example is Stripe. So we use Stripe.

I'm sure a lot of you guys use Stripe for those of you that are accepting payments. Stripe, in the very early days when they were trying to figure out what they needed, they had this API that looked beautiful. And literally every single transaction that came in, there was somebody who was on the phone calling the transaction in.

There was no interface layer between orders actually being accepted in the service and placing those orders out. So a huge company that started with sort of the man behind the curtain strategy of why go and build the transaction, the automation layer, when we're just trying to figure out what our users want. A rule of thumb is to only worry about the next order of magnitude.

So when you have 100 users, worry about what the company looks like. Can it survive to 1,000? 1,000?

10,000? And so on and so forth. If you're worrying about the millionth user and their experience and how your technology is going to scale when you have 100 users, you're pointed in the wrong direction.

And the sort of my belief anyway is that you'll survive. If your company does so well and users fall in love with it and you hit those traction points and you grow the way that you want to grow and the technology starts to break or crumble or servers start to crash, and I'll give some examples of this, you'll find a way to survive. I call those like quote unquote rich people problems.

You know, if you're able to actually get there, deal with those problems when they emerge. Don't try to solve for something that doesn't exist now because again, you'll end up building beautiful scalable technology with a product that people don't want. And so some sort of notable examples.

Everybody remembers the fail whale. Twitter had a nightmare of a time scaling. But because they had built a product and found traction, their users stuck with it.

And a less than notable example is Teespring. So we followed the lessons of MVP and agility and don't worry about technical debt and lots of duct tape code to an extreme degree. And for almost a year during when we really sort of caught fire and started to grow quickly, we couldn't really push out any features because we were so in the way that we could.

We could be in the weeds of firefighting and trying to scale. There was about a six month period where Teespring would crash every single day. And we would all go to sleep with our phones on and like under the pillow.

And every single night, all of our phones would go off and you'd, you know, wake up and lumber over and restart the database. But you know what? It was worth it.

And would I have, if I could go back, would I have built the technology the right way the first time? No, because I would have built the wrong technology. So don't worry about what happens when you hit that millionth user.

Worry about how you're going to find growth and market fit. So again, doing things that don't scale is a fundamental advantage you have. And it's something that I, again, I will argue is one of the biggest advantages that small companies have.

You can provide a level of service and you can have a level of agility that larger companies cannot. And that allows you to outperform them. Small teams can run circles around big teams.

And it's something that we deal with today now, looking at smaller companies and competitors, where the speed that we want to move at, they're able to be more flexible because they're dealing with several, they're dealing with much smaller user bases. So don't give it up until you are absolutely forced to. Even today, I do lots of things that don't scale.

There are positions where you need to make trade-offs. You know, I was the catch-all email address for a long time until it started to take like four hours a day at Teespring. And so I had to give that up.

But don't get to a point where you find that initial traction and throw away the lessons that got you there. Continue to speak to customers. Continue to be as agile as possible with your technology.

Relish the advantage that you have. And one day when you guys find, when you grow to the size that you're looking for and become the companies you're looking for, you'll look back on this and wish you still had that agility. So thank you guys so much.

I appreciate the time. And yeah, looking forward to asking questions. Thanks, Walker.

We'll take one question. Oh, is that slow? Okay, so I was wondering, you're talking about kind of a pivot point if things aren't really scaling too well or just not going on.

When do you throw in the towel? Sure. It's a really hard choice.

So I had a company before Teespring where we ran into that where you have to make, well, I'll take an example from Teespring. So when you release products, if you're talking to all of the users, especially, first you should follow users to the products you should build. Use growth as a compass.

I'm a fundamental believer in that philosophy. Allow users to pull you towards what you need to build. Throwing in the towel is really when you find that the complexity, you know, either people demand it for free, huge no-no, or people demand customization in every single implementation.

That was what we found with the enterprise. But a lot of it comes down to instinct. You know, I think that starting a company, there's a lot of points at which you need to sort of roll the dice and go off of your instinct.

There's points during the first year where I absolutely thought, and looking back, it looks, you know, it looks smooth, it looks easy. But there were points in that first year where I absolutely thought about, hey, maybe this company won't make it. Maybe this isn't a business model that works.

And we considered throwing in the towel. And that same thing for enterprise. So I think it's an instinct call.

You have to see how the customers are reacting and make a decision about whether or not that's actually going to be a viable vertical. All right. Thank you so much, guys.

Appreciate it.